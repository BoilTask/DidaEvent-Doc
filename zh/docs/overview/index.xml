<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>事件系统 on DidaEvent</title>
    <link>/zh/docs/overview/</link>
    <description>Recent content in 事件系统 on DidaEvent</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Sun, 03 Nov 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="/zh/docs/overview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>实现说明</title>
      <link>/zh/docs/overview/introduction/</link>
      <pubDate>Sun, 03 Nov 2024 12:00:00 +0000</pubDate>
      <guid>/zh/docs/overview/introduction/</guid>
      <description>&lt;h2 id=&#34;系统简述&#34;&gt;系统简述&lt;/h2&gt;&#xA;&lt;p&gt;一种允许在特定时机执行指定操作的机制，通常需要包括事件源、事件监听、事件调度等部分。&lt;/p&gt;&#xA;&lt;p&gt;通过事件系统，我们可以更为方便地实现两个较为独立的系统之间的调用。&lt;/p&gt;&#xA;&lt;p&gt;而引入一个好用的事件系统之后，我们也可以更多的使用“观察者模式”设计逻辑。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;观察者是一种行为设计模式，允许你定义一种订阅机制，可在对象事件发生时通知多个“观察”该对象的其他对象。——&lt;a href=&#34;https://refactoringguru.cn/design-patterns/observer&#34;&gt;观察者设计模式 (refactoringguru.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;设计思路&#34;&gt;设计思路&lt;/h2&gt;&#xA;&lt;p&gt;我们需要提供一个更为完善的事件系统，从而达到实现类似需求时，无需再建立功能向的事件系统。&lt;/p&gt;&#xA;&lt;p&gt;该系统应该实现以下几点目标：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;易用性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应尽可能减少系统的理解门槛&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提高逻辑的可读性&lt;/li&gt;&#xA;&lt;li&gt;完善系统的相关文档&lt;/li&gt;&#xA;&lt;li&gt;规范事件系统的维护流程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;应能便捷的由某一系统发送事件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++中发送&lt;/li&gt;&#xA;&lt;li&gt;蓝图中发送&lt;/li&gt;&#xA;&lt;li&gt;Lua中发送&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;应能便捷的由某一系统监听事件&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++中监听&lt;/li&gt;&#xA;&lt;li&gt;蓝图中监听&lt;/li&gt;&#xA;&lt;li&gt;Lua中监听&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;扩展性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应能便捷的扩展一种新事件&lt;/li&gt;&#xA;&lt;li&gt;提高技术方案的严谨性避免出现不兼容更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;全面性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应能处理DS与客户端的同步问题&lt;/li&gt;&#xA;&lt;li&gt;应能解决C++&amp;amp;蓝图&amp;amp;Lua的三方通信&lt;/li&gt;&#xA;&lt;li&gt;应能处理多监听者顺序问题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;鲁棒性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;尽量减少使用事件系统时的强制要求&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;性能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应在运行时减少不必要的事件分发]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;功能实现&#34;&gt;功能实现&lt;/h2&gt;&#xA;&lt;h3 id=&#34;事件定义&#34;&gt;事件定义&lt;/h3&gt;&#xA;&lt;p&gt;使用Class作为指定事件的一种索引，防止纯Name式带来的误操作，同时也方便后续以Event为单位扩展。&lt;/p&gt;</description>
    </item>
    <item>
      <title>安装</title>
      <link>/zh/docs/overview/install/</link>
      <pubDate>Sun, 03 Nov 2024 12:00:00 +0000</pubDate>
      <guid>/zh/docs/overview/install/</guid>
      <description>&lt;h2 id=&#34;购买&#34;&gt;购买&lt;/h2&gt;&#xA;&lt;p&gt;可前往&lt;a href=&#34;https://www.fab.com/zh-cn/listings/a3991470-a7b9-474d-8038-289dad0b0497&#34;&gt;Unreal Engine Marketplace&lt;/a&gt;购买。&lt;/p&gt;</description>
    </item>
    <item>
      <title>更新日志</title>
      <link>/zh/docs/overview/changelog/</link>
      <pubDate>Sun, 03 Nov 2024 12:00:00 +0000</pubDate>
      <guid>/zh/docs/overview/changelog/</guid>
      <description>&lt;h2 id=&#34;100&#34;&gt;1.0.0&lt;/h2&gt;&#xA;&lt;p&gt;上传基础实现版本。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提供了事件定义&lt;/li&gt;&#xA;&lt;li&gt;提供了事件广播&lt;/li&gt;&#xA;&lt;li&gt;提供了事件监听&lt;/li&gt;&#xA;&lt;li&gt;提供了频道机制&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
