<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>使用指南 on DidaEvent</title>
    <link>/zh/docs/tutorial/</link>
    <description>Recent content in 使用指南 on DidaEvent</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>Copyright (c) 2020-2024 Thulite</copyright>
    <lastBuildDate>Sun, 03 Nov 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="/zh/docs/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快速编写一个事件</title>
      <link>/zh/docs/tutorial/quick/</link>
      <pubDate>Sun, 03 Nov 2024 12:00:00 +0000</pubDate>
      <guid>/zh/docs/tutorial/quick/</guid>
      <description>&lt;p&gt;通过以下步骤，我们能快速定义和使用一个事件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;定义事件&#34;&gt;定义事件&lt;/h2&gt;&#xA;&lt;p&gt;要创建一个事件，我们需要定义一个以&lt;code&gt;UDidaEvent&lt;/code&gt;为基类的子类，可以是&lt;code&gt;C++&lt;/code&gt;类也可以是蓝图类。&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&lt;img&#xD;&#xA;  src=&#34;/images/quick-declare-event.gif&#34;&#xD;&#xA;  width=&#34;700&#34;&#xD;&#xA;  height=&#34;700&#34;&#xD;&#xA;  decoding=&#34;async&#34;&#xD;&#xA;  fetchpriority=&#34;auto&#34;&#xD;&#xA;  loading=&#34;lazy&#34;&#xD;&#xA;  alt=&#34;quick-declare-event&#34;id=&#34;h-rh-i-0&#34;&#xD;&#xA;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;监听事件&#34;&gt;监听事件&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;code&gt;Actor&lt;/code&gt;中可以使用&lt;code&gt;DidaEventListenerComponent&lt;/code&gt;来监听事件。&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&lt;img&#xD;&#xA;  src=&#34;/images/quick-create-listener.gif&#34;&#xD;&#xA;  width=&#34;350&#34;&#xD;&#xA;  height=&#34;350&#34;&#xD;&#xA;  decoding=&#34;async&#34;&#xD;&#xA;  fetchpriority=&#34;auto&#34;&#xD;&#xA;  loading=&#34;lazy&#34;&#xD;&#xA;  alt=&#34;quick-create-listener&#34;id=&#34;h-rh-i-1&#34;&#xD;&#xA;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;设置Component的属性，配置所需监听的事件。&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&lt;img&#xD;&#xA;  src=&#34;/images/quick-set-listener-event.gif&#34;&#xD;&#xA;  width=&#34;450&#34;&#xD;&#xA;  height=&#34;450&#34;&#xD;&#xA;  decoding=&#34;async&#34;&#xD;&#xA;  fetchpriority=&#34;auto&#34;&#xD;&#xA;  loading=&#34;lazy&#34;&#xD;&#xA;  alt=&#34;quick-set-listener-event&#34;id=&#34;h-rh-i-2&#34;&#xD;&#xA;/&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用Component上的Delegate编写收到事件后的逻辑。&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&lt;img&#xD;&#xA;  src=&#34;/images/quick-set-listener-callback.gif&#34;&#xD;&#xA;  width=&#34;1300&#34;&#xD;&#xA;  height=&#34;750&#34;&#xD;&#xA;  decoding=&#34;async&#34;&#xD;&#xA;  fetchpriority=&#34;auto&#34;&#xD;&#xA;  loading=&#34;lazy&#34;&#xD;&#xA;  alt=&#34;quick-set-listener-callback&#34;id=&#34;h-rh-i-3&#34;&#xD;&#xA;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;广播事件&#34;&gt;广播事件&lt;/h2&gt;&#xA;&lt;p&gt;在蓝图中可以调用&lt;code&gt;DidaInvokeEvent&lt;/code&gt;结点触发事件。&lt;/p&gt;&#xA;&lt;p&gt;&#xD;&#xA;&#xD;&#xA;&lt;img&#xD;&#xA;  src=&#34;/images/quick-invoke-event.gif&#34;&#xD;&#xA;  width=&#34;650&#34;&#xD;&#xA;  height=&#34;400&#34;&#xD;&#xA;  decoding=&#34;async&#34;&#xD;&#xA;  fetchpriority=&#34;auto&#34;&#xD;&#xA;  loading=&#34;lazy&#34;&#xD;&#xA;  alt=&#34;quick-invoke-event&#34;id=&#34;h-rh-i-4&#34;&#xD;&#xA;/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;恭喜&#34;&gt;恭喜&lt;/h2&gt;&#xA;&lt;p&gt;🎉通过如上步骤我们实现了一个功能：&lt;/p&gt;&#xA;&lt;p&gt;在按键时，角色对象输出了一条日志。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
